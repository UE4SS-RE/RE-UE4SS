name: Linux Test Build

on:
  workflow_dispatch: {}
  push:
    branches: [ "linux-port" ]
    paths:
      - "UE4SS/src/**"
      - "UE4SS/include/**"
      - "UE4SS/generated_src/**"
      - "UE4SS/generated_include/**"
      - "deps/**"
      - "UE4SS/proxy_generator/**"
      - ".github/workflows/linux-test.yml"
      - "CMakeLists.txt"
      - "cmake/**"
      - tools/**
      - xmake.lua

permissions:
  contents: read

jobs:
  make-release:
    runs-on: ubuntu-22.04
    steps:
      - name: Setup github SSH
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSHKEY }}
          known_hosts: unnecessary
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0 # needed to get commits since last tag
          ssh-key: ${{ secrets.SSHKEY }}
      - name: Setup Ninja
        uses: seanmiddleditch/gha-setup-ninja@v3
      - name: Setup LLVM
        uses: ZhongRuoyu/setup-llvm@v0
        with:
          llvm-version: 18
      - uses: goto-bus-stop/setup-zig@v2
      - run: zig cc -v
      - name: Upgrade libstdc++
        run: |
          sudo add-apt-repository ppa:ubuntu-toolchain-r/test
          sudo apt -y update
          sudo apt -y install --only-upgrade libstdc++6
          sudo apt -y install libstdc++-13-dev
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@1.76.0
      - name: Setup xmake
        uses: xmake-io/github-action-setup-xmake@v1
        with:
          xmake-version: latest
          actions-cache-folder: '.xmake-cache'
          actions-cache-key: 'linux-test'
      - name: Build
        run: |
          xmake f -y --ue4ssUI=TUI --ue4ssInput=y --ue4ssIsBeta=y -m "Game__Shipping__Linux"
          XMAKE_COLORTERM=nocolor xmake build -v -D > build.log
      - name: Stripping
        run: |
          mkdir prepackage
          objcopy --only-keep-debug Binaries/Game__Shipping__Linux/UE4SS/libUE4SS.so ./prepackage/libUE4SS.so.debug
          cp Binaries/Game__Shipping__Linux/UE4SS/libUE4SS.so ./prepackage/libUE4SS.so
          strip --strip-debug --strip-unneeded ./prepackage/libUE4SS.so
          cd ./prepackage && objcopy --add-gnu-debuglink=libUE4SS.so.debug ./libUE4SS.so && cd ..
      - name: Package
        run: python ./tools/buildscripts/build.py package -d ./prepackage -s linux64
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Linux-Release
          path: |
            release/zDEV-UE4SS_0.0.0.zip
            build.log
